#!/usr/bin/env bash
set -vx
# Set time specific enviro vars
export UPLOAD_WORK_LIST=$(date +%Y-%m-%d)-ia-uploads.lst
# ------------------------
# 1. Get the list of things that have failed derive
# Run from .../ia-metadata-report/input/YYYY-mm-dd
# ../../update-derive-fails.sh
# Essentially # ia tasks --red-rows | cut -f1 | sed -re 's/bdrc-(.*)/\1/g' | sort > "${ftnow}".derivedfailed.lst
# ln -s ${ftnow}.derivedfails.lst derivedfails.lst
# ---------------------------------
# 2. Derive the list of uploaded works from the ia service log extract
# (grep 'ia status: 0' sattva:~service/tmp/ia-con)
# the list is a set of paths, need to extract the work only

sed -re 's@.*/(W[0-9].*)@\1@'  /Volumes/home/prod/ao645/2022-06-09-ia-feed-success.lst | sort -u > "${UPLOAD_WORK_LIST}"
# 2a. Remove the works which are still deriving, or not yet derived.
# HACK - this is still
cp ../Timb-derive-incomplete.lst derive-incomplete.lst
#
# Run these, and the rest, as ia-uploader@tbrc.org
ia tasks --blue-rows | cut -f1 | sed -re 's/bdrc-(.*)/\1/g'  >> derive-incomplete.lst
ia tasks --green-rows | cut -f1 | sed -re 's/bdrc-(.*)/\1/g' >> derive-incomplete.lst
ia tasks --red-rows | cut -f1 | sed -re 's/bdrc-(.*)/\1/g' >> derive-incomplete.lst
#
# 3. Remove all the failed or in process works
sort -u derive-incomplete.lst > excluded-works.lst

#
# 4. Find the list of derived uploads
grep -vf excluded-works.lst  "${UPLOAD_WORK_LIST}" > derived-uploads.lst

#------------------------------------
# 5. which of the uploaded-derived is in the list of wrong catalogs (Assume they're both up to date)
# Add the categories to the search file:
grep -v bdrc ../../report.log | grep -v '^[[:space:]]*$' >> derived-uploads.lst
# Should add these lines
#listed items that should be unlisted:
#unlisted items that should be listed:
#items in buddhist-digital-resource-center-restricted that should not be:
#items not in buddhist-digital-resource-center-restricted that should be:
#items in inlibrary that should not be:
#items not in inlibrary that should be:
#items in geo_restricted that should not be:
#items not in geo_restricted that should be:
# -------------
# Look for the uploads in the report
#

# grep -f brings in some failed uploads - because of prefixes: bdrc-W00KG03 brings in bdrc-W00KG03658
grep -fw derived-uploads.lst ../../report.log > 2022-07-11-uploads-still-badcat.lst
rm 2022-07-11-uploads-still-badcat.lst
set -vx
while IFS= read -r pattern; do
    grep "$pattern" ../../report.log
done < derived-uploads.lst  | less
set +vx
#
# This will show which works appear in multiple list of failures, although not the specific
# failures
sort badcat.lst > dups.badcat.lst
#
# Get the actual collections list these works are in
# This line creates a json file for each bad work
# while read awork ; do printf $awork ; ia metadata $awork | jq '.metadata.collection' | tee -a collections/$awork.json ; done < badcat.lst | tee collections/2022-07-11-badcat.json
# Just create one
# Warning! This works right in ZSH, but doesnt in bash
# Try cat badcat.lst | parallel 'printf ":%s:\t" {} ; ia metadata {} | jq .metadata.collection
while read awork ; do ia metadata $awork | jq '.metadata.collection' ; done < badcat.lst | tee collections/2022-07-11-badcat.json
#
# collections analysis:
#
# Everything in unlisted items that should be listed
# Has these collections
                #bdrc-W1KG25365[
                #  "buddhist-digital-resource-center",
                #  "buddhist-digital-resource-center-restricted",
                #  "inlibrary"
                # ]
# The fillcache query:
# ia search 'collection:buddhist-digital-resource-center' | sed -re 's/^\{"identifier": "bdrc-(.*)"\}$/\1/g' | sort | grep '^W' > cache/ia-bdrc.txt

